// <auto-generated />
using System;
using GameKeeper.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameKeeper.Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240915215214_initial migration")]
    partial class initialmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GameKeeper.Web.Models.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Publisher")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("GameKeeper.Web.Models.Entities.GameGenre", b =>
                {
                    b.Property<int>("GamesId")
                        .HasColumnType("int");

                    b.Property<int>("GenresId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("GamesId", "GenresId");

                    b.HasIndex("GenresId");

                    b.ToTable("GameGenre", (string)null);
                });

            modelBuilder.Entity("GameKeeper.Web.Models.Entities.GameRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("GameRecords");
                });

            modelBuilder.Entity("GameKeeper.Web.Models.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("GameKeeper.Web.Models.Entities.Player", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("GameKeeper.Web.Models.Entities.PlayerRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("GameRecordId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<bool>("Won")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("GameRecordId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerRecord", (string)null);
                });

            modelBuilder.Entity("GameKeeper.Web.Models.Entities.GameGenre", b =>
                {
                    b.HasOne("GameKeeper.Web.Models.Entities.Game", "Games")
                        .WithMany("GameGenres")
                        .HasForeignKey("GamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameKeeper.Web.Models.Entities.Genre", "Genres")
                        .WithMany("GameGenres")
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Games");

                    b.Navigation("Genres");
                });

            modelBuilder.Entity("GameKeeper.Web.Models.Entities.GameRecord", b =>
                {
                    b.HasOne("GameKeeper.Web.Models.Entities.Game", "Game")
                        .WithMany("GameRecords")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GameKeeper.Web.Models.Entities.PlayerRecord", b =>
                {
                    b.HasOne("GameKeeper.Web.Models.Entities.GameRecord", "GameRecord")
                        .WithMany("PlayerRecords")
                        .HasForeignKey("GameRecordId");

                    b.HasOne("GameKeeper.Web.Models.Entities.Player", "Player")
                        .WithMany("PlayerRecords")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameRecord");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("GameKeeper.Web.Models.Entities.Game", b =>
                {
                    b.Navigation("GameGenres");

                    b.Navigation("GameRecords");
                });

            modelBuilder.Entity("GameKeeper.Web.Models.Entities.GameRecord", b =>
                {
                    b.Navigation("PlayerRecords");
                });

            modelBuilder.Entity("GameKeeper.Web.Models.Entities.Genre", b =>
                {
                    b.Navigation("GameGenres");
                });

            modelBuilder.Entity("GameKeeper.Web.Models.Entities.Player", b =>
                {
                    b.Navigation("PlayerRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
